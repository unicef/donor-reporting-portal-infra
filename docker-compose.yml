version: '2.1'

services:
  frontend:
    image: unicef/donor-reporting-portal-frontend:dev
    container_name: donor_reporting_portal_frontend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - traefik.http.routers.frontend.service=frontend
      - traefik.http.routers.frontend.middlewares=frontend-stripprefix
      - traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=/
      - traefik.http.services.frontend.loadBalancer.server.port=3000
      - traefik.port=3000

  backend:
    image: unicef/donor-reporting-portal-backend:dev
    env_file: ./donor-reporting-portal-backend/.env

    environment:
      DATABASE_URL: postgres://postgres:pass@db:5432/donor_reporting_portal
      HOST: http://localhost:8082
      DEBUG: 1
      CACHE_URL: redis://redis:6379/1
      REDIS_URL: redis://redis:6379/1
      CELERY_BROKER_URL: redis://redis:6379/2
      CELERY_RESULT_BACKEND: redis://redis:6379/3
      CSRF_COOKIE_SECURE: 0
      SECURE_SSL_REDIRECT: 0
      SESSION_COOKIE_HTTPONLY: 0
      SESSION_COOKIE_SECURE: 0
      STATIC_ROOT: /var/donor_reporting_portal/static/
      MEDIA_ROOT: /var/donor_reporting_portal/media/
      MEDIA_URL: http://localhost:8082/media/

    volumes:
      - "./donor-reporting-portal-backend:/code"
      - "./volumes/backend/var/donor_reporting_portal/:/var/donor_reporting_portal"
    depends_on:
      - db
      - redis
    container_name: donor_reporting_portal_backend
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api/`,`/admin/`,`/static/`,`/sociallogin/`,`/socialcomplete/`,`/social/`,`/accounts/`)"
      - traefik.http.routers.backend.service=backend
      - traefik.http.services.backend.loadBalancer.server.port=8080
      - traefik.enable=true

  proxy:
    image: traefik:2.1
    command: --api --providers.docker
    ports:
      - "8082:80"
      - "8080:8080"
    container_name: donor_reporting_portal_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres:12-alpine
    container_name: donor_reporting_portal_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: donor_reporting_portal
    volumes:
      - "./volumes/db2/data:/var/lib/postgresql/data"

  redis:
    image: redis:5.0-alpine
    container_name: donor_reporting_portal_redis
    hostname: redis
    command: ["redis-server", "--appendonly", "yes"]
